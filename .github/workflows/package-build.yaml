# This workflow will build a Java project with Maven and scan code. It requires that the repo has the files:
#  buildscripts/build.sh and buildscripts/scan.sh
# The
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
        description: "The type of build - maven | node"
      working_directory:
        required: false
        type: string
        default: "."
      store_artifacts:
        required: false
        type: boolean
        default: false
        description: "true | false - if true, the build artifacts are stored and identified using artifacts_name"
      artifacts_name:
        required: false
        type: string
        description: "artifacts key for storing artifacts for later use in another job/workflow (e.g. create docker image)"
    secrets:
      packages_user:
        required: true
        description: "Github packages user"
      packages_access_token:
        required: true
        description: "Gihub packages access token"
      sonar_access_token:
        required: true
        description: "SonarQube access token"
    outputs:
      app_version:
        value: ${{ jobs.install_packages.outputs.app_version }}
        description: "App. version"
      short_commit_sha:
        value: ${{ jobs.install_packages.outputs.short_commit_sha }}
        description: "Short commit SHA"

defaults:
  run:
    shell: bash
    working-directory: ${{ inputs.working_directory }}

jobs:
  install_packages:
    name: Build, scan and test (optional)
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.vars.outputs.app_version }}
      short_commit_sha: ${{ steps.vars.outputs.short_commit_sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        if: ${{ inputs.build_type == 'maven' }}
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
      - uses: actions/setup-node@v2
        if: ${{ inputs.build_type == 'node' }}
        with:
          node-version: '14'
          cache: 'npm'
      - name: Get build variables
        id: vars
        run: |
          echo "::set-output name=app_version::$(buildscripts/getversion.sh)"
          echo "::set-output name=short_commit_sha::$(git rev-parse --short HEAD)"
      - name: Build packages
        run: buildscripts/build.sh install ${{ secrets.packages_user }} ${{ secrets.packages_access_token }}
      - name: Scan code
        run: buildscripts/scan.sh ${{ steps.vars.outputs.app_version }} ${{ steps.vars.outputs.short_commit_sha }} ${{ secrets.sonar_access_token }}
      - name: Copy artifacts (optional)
        if: ${{ inputs.store_artifacts }}
        run: buildscripts/copyartifacts.sh __artifacts
      - name: Upload artifacts (optional)
        if: ${{ inputs.store_artifacts }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifacts_name }}
          path: __artifacts
          retention-days: 1